{
  "swagger": "2.0",
  "info": {
    "title": "BKRES API",
    "description": "",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Operations about users"
    },
    {
      "name": "Gateway",
      "description": "Operations about gateways"
    },
    {
      "name": "Device",
      "description": "Operations about devices"
    },
    {
      "name": "Sensor",
      "description": "Operations about sensors"
    },
    {
      "name": "Data",
      "description": "Operations about datas"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to login in a specific user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to create user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "account": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "fname": {
                  "example": "any"
                },
                "lname": {
                  "example": "any"
                },
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/get_user": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/user/get_alluser": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/deleteuser/{User_key}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete user",
        "parameters": [
          {
            "name": "User_key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/updateUser/{User_key}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update user",
        "parameters": [
          {
            "name": "User_key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/device/create": {
      "post": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to create device",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gateway_name": {
                  "example": "any"
                },
                "device_name": {
                  "example": "any"
                },
                "device_id": {
                  "example": "any"
                },
                "device_ip": {
                  "example": "any"
                },
                "count": {
                  "example": "any"
                },
                "mess_in_minute": {
                  "example": "any"
                },
                "is_block": {
                  "example": "any"
                },
                "time_interval": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/device/deletedevice/{API}": {
      "delete": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to delete device",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/device/updateDevice/{API}": {
      "put": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to update device",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/device/getDevice/{API}": {
      "post": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to get device",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/device/getallDevice/{API}": {
      "post": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to get all device",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/gateway/create": {
      "post": {
        "tags": [
          "Gateway"
        ],
        "description": "Endpoint to create gateway",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gateway_name": {
                  "example": "any"
                },
                "lat": {
                  "example": "any"
                },
                "lon": {
                  "example": "any"
                },
                "is_public": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/gateway/deletegateway/{API}": {
      "delete": {
        "tags": [
          "Gateway"
        ],
        "description": "Endpoint to delete gateway",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/gateway/updateGateway/{API}": {
      "put": {
        "tags": [
          "Gateway"
        ],
        "description": "Endpoint to update gateway",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gateway_name": {
                  "example": "any"
                },
                "lat": {
                  "example": "any"
                },
                "lon": {
                  "example": "any"
                },
                "updatedData": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/gateway/getGateway/{API}": {
      "post": {
        "tags": [
          "Gateway"
        ],
        "description": "Endpoint to get gateway",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/gateway/getallGateway": {
      "post": {
        "tags": [
          "Gateway"
        ],
        "description": "Endpoint to get all gateway",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/data/sendData1": {
      "get": {
        "tags": [
          "Data"
        ],
        "description": "Endpoint to save data from device",
        "parameters": [
          {
            "name": "API",
            "in": "query",
            "type": "string"
          },
          {
            "name": "data",
            "in": "query",
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/data/sendData2": {
      "post": {
        "tags": [
          "Data"
        ],
        "description": "Endpoint to save data from gateway",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/data/getdata/{API}": {
      "post": {
        "tags": [
          "Data"
        ],
        "description": "Endpoint to get data by API device",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sensor/create": {
      "post": {
        "tags": [
          "Sensor"
        ],
        "description": "Endpoint to create sensor",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "device_id": {
                  "example": "any"
                },
                "sensor_name": {
                  "example": "any"
                },
                "provider": {
                  "example": "any"
                },
                "unit": {
                  "example": "any"
                },
                "describe": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/sensor/deletesensor/{API}": {
      "delete": {
        "tags": [
          "Sensor"
        ],
        "description": "Endpoint to delete sensor",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sensor/updateSensor/{API}": {
      "put": {
        "tags": [
          "Sensor"
        ],
        "description": "Endpoint to update sensor",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sensor/getSensor/{API}": {
      "post": {
        "tags": [
          "Sensor"
        ],
        "description": "Endpoint to get sensor",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sensor/getallSensor/{API}": {
      "post": {
        "tags": [
          "Sensor"
        ],
        "description": "Endpoint to get all sensor",
        "parameters": [
          {
            "name": "API",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  }
}